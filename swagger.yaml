swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: |-
    API for transactions that must allow users to:
    - view all their transactions for the current month
    - view the details of a transaction in another view
    - add, modify or delete information on a transaction

    Some useful links:
    - [Bank Argent repository](https://github.com/MichelD-dev/ArgentBank-Front)
    - [User API definition for project](https://github.com/MichelD-dev/ArgentBank-Front/blob/main/swagger.yaml)
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{user_id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for Transactions
      parameters:
        - in: path
          name: user_id
          description: User identification
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionsApiResponse'
        '400':
          description: Bad request
        '404':
          description: Transactions not found
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction API
      description: API to post a transaction
      parameters:
        - in: path
          name: user_id
          description: User identification
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Transmission Payload
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: User transaction posted successully
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{user_id}/transactions/{transaction_id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction API
      description: API to get a specific transaction details
      parameters:
        - in: path
          name: user_id
          description: User identification
          required: true
          type: string
        - in: path
          name: transaction_id
          description: Transaction identification
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User transaction retrieved successully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '400':
          description: Bad request
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction API
      description: API for updating a user transaction
      parameters:
        - in: path
          name: user_id
          description: User identification
          required: true
          type: string
        - in: path
          name: transaction_id
          description: Transaction identification
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user transaction attributes
          required: true
          schema:
            $ref: '#/definitions/UserTransaction'
      produces:
        - application/json
      responses:
        '204':
          description: Transaction updated successully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '400':
          description: Bad request
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction API
      description: API for deleting a user transaction
      parameters:
        - in: path
          name: user_id
          description: User identification
          required: true
          type: string
        - in: path
          name: transaction_id
          description: Transaction identification
          required: true
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successully
        '400':
          description: Bad request
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: string
            date:
              type: string
              format: date
            description:
              type: string
            amount:
              type: number
              format: float
            balance:
              type: number
              format: float
  Transaction:
    type: object
    properties:
      body:
        type: object
        properties:
          description:
            type: string
          transactionType:
            type: string
          category:
            type: string
          notes:
            type: string
          amount:
            type: number
            format: float
  TransactionApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transaction_id:
            type: string
          date:
            type: string
            format: date
          description:
            type: string
          transactionType:
            type: string
          category:
            type: string
          notes:
            type: string
          amount:
            type: number
            format: float
          balance:
            type: number
            format: float
  UserTransaction:
    type: object
    properties:
      body:
        type: object
        properties:
          category:
            type: string
          notes:
            type: string
  TransactionID:
    properties:
      id:
        type: number
        description: Transaction ID